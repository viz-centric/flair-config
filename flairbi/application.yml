# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================
eureka:
  client:
    enabled: true
    healthcheck:
      enabled: true
    fetch-registry: true
    register-with-eureka: true
    instance-info-replication-interval-seconds: 10
    registry-fetch-interval-seconds: 10
  instance:
    appname: flairbi
    instanceId: ${spring.cloud.client.hostname}:flairbi:${spring.application.instance-id:${random.value}}
    lease-renewal-interval-in-seconds: 5
    lease-expiration-duration-in-seconds: 10
    status-page-url-path: ${management.endpoints.web.base-path}/info
    health-check-url-path: ${management.endpoints.web.base-path}/health
    metadata-map:
      zone: primary # This is needed for the load balancer
      profile: ${spring.profiles.active}
      version: #project.version#
      git-version: ${git.commit.id.describe:}
      git-commit: ${git.commit.id.abbrev:}
      git-branch: ${git.branch:}
ribbon:
  eureka:
    enabled: true
feign:
  hystrix:
    enabled: true
# See https://github.com/Netflix/Hystrix/wiki/Configuration
hystrix:
  command:
    default:
      execution:
        isolation:
          strategy: SEMAPHORE
          # See https://github.com/spring-cloud/spring-cloud-netflix/issues/1330
          # thread:
          #     timeoutInMilliseconds: 10000
  shareSecurityContext: true

grpc:
  server:
    service-name: flair-engine-grpc


management:
  endpoints:
    web:
      base-path: /management
      exposure:
        include: ['configprops', 'env', 'health', 'info', 'jhimetrics', 'logfile', 'loggers', 'prometheus', 'threaddump']
  endpoint:
    health:
      show-details: when-authorized
      roles: 'ROLE_ADMIN'
    jhimetrics:
      enabled: true
  info:
    git:
      mode: full
  health:
    ldap:
      enabled: false # When using LDAP, set this to true
    mail:
      enabled: false # When using the MailService, configure an SMTP server and set this to true
  metrics:
    export:
      # Prometheus is the default metrics backend
      prometheus:
        enabled: true
        step: 60
    enable:
      http: true
      jvm: true
      logback: true
      process: true
      system: true
    distribution:
      percentiles-histogram:
        all: true
      percentiles:
        all: 0, 0.5, 0.75, 0.95, 0.99, 1.0
    tags:
      application: flairbi
    web:
      server:
        auto-time-requests: true
spring:
  jmx:
    enabled: false
  application:
    name: flairbi
  data:
    jpa:
      repositories:
        bootstrap-mode: deferred
  profiles:
    # The commented value for `active` can be replaced with valid Spring profiles to load.
    # Otherwise, it will be filled in by maven when building the WAR file
    # Either way, it can be overridden by `--spring.profiles.active` value passed in the commandline or `-Dspring.profiles.active` set in `JAVA_OPTS`
    active: #spring.profiles.active#
  jackson:
    serialization.write_dates_as_timestamps: false
  jpa:
    open-in-view: false
    hibernate:
      # needs to be migrated..
      use-new-id-generator-mappings: false
      ddl-auto: none
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
  messages:
    basename: i18n/messages
  task:
    execution:
      thread-name-prefix: flairbi-task-
      pool:
        core-size: 2
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: flairbi-scheduling-
      pool:
        size: 2
  thymeleaf:
    mode: HTML
  output:
    ansi:
      console-available: true

server:
  servlet:
    session:
      cookie:
        http-only: true
# Properties to be exposed on the /info management endpoint
info:
  # Comma separated list of profiles that will trigger the ribbon to show
  display-ribbon-on-profiles: 'dev'

# ===================================================================
# JHipster specific properties
# ===================================================================

jhipster:
  clientApp:
    name: 'flairbi'
  async:
    corePoolSize: 2
    maxPoolSize: 50
    queueCapacity: 10000
  cors: #By default CORS are not enabled. Uncomment to enable.
    allowed-origins: "*"
    allowed-methods: GET, PUT, POST, DELETE, OPTIONS
    allowed-headers: "*"
    exposed-headers:
    allow-credentials: true
    max-age: 1800
  logging:
    # To test json console appender
    use-json-format: true # By default, logs are in Json format
    logstash:
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  security:
    authentication:
      jwt:
        secret: my-secret-token-to-change-in-production
  metrics:
    logs: # Reports metrics in the logs
      enabled: true
      report-frequency: 60 # in seconds
  # Specific configuration for JHipster gateways
  # See https://www.jhipster.tech/api-gateway/ for more information on JHipster gateways
  gateway:
      # rate-limiting:
      #     enabled: false # Rate limiting is disabled by default
      #     limit: 100_000L # By default we allow 100,000 API calls
      #     duration-in-seconds: 3_600 # By default the rate limiting is reinitialized every hour
      authorized-microservices-endpoints: # Access Control Policy, if left empty for a route, all endpoints will be accessible
          fbiengine: /api # recommended prod configuration, it allows the access to all API calls from the "app1" microservice
      
# ===================================================================
# Application scheduler configuration
# ===================================================================
flair-notifications:
  auth-url: /api-token-auth/
  scheduled-report-url: /api/jobSchedule/
  scheduled-reports-url: /api/user/{user}/reports?pageSize={pageSize}&page={page}
  scheduled-reports-count-url: /api/user/{user}/reportCount/
  scheduled-report-param-url: /api/jobSchedule/?visualizationid={visualizationid}
  scheduled-execute-now-report-param-url: /api/executeImmediate/?visualizationid={visualizationid}
  scheduled-report-logs-param-url: /api/jobLogs/?visualizationid={visualizationid}&pageSize={pageSize}&page={page}
  scheduled-search-reports-param-url: /api/jobFilter/?userName={userName}&reportName={reportName}&startDate={startDate}&endDate={endDate}&pageSize={pageSize}&page={page}


